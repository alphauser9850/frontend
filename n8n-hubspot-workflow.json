{
  "name": "Form to HubSpot Integration",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "webhook/form-to-hubspot",
        "responseMode": "responseNode",
        "options": {
          "allowedOrigins": "*"
        }
      },
      "id": "webhook-trigger",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "form-submission-webhook"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "email-validation",
              "leftValue": "={{ $json.email }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "isNotEmpty"
              }
            },
            {
              "id": "name-validation", 
              "leftValue": "={{ $json.name }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "isNotEmpty"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "data-validation",
      "name": "Data Validation",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "jsCode": "// Clean and format the incoming form data\nconst formData = $input.first().json;\n\n// Extract and clean data\nconst cleanData = {\n  email: formData.email?.trim().toLowerCase(),\n  firstName: formData.name?.split(' ')[0]?.trim() || formData.firstName?.trim(),\n  lastName: formData.name?.split(' ').slice(1).join(' ')?.trim() || formData.lastName?.trim() || '',\n  phone: formData.phone?.trim(),\n  company: formData.company?.trim() || 'Not Provided',\n  message: formData.message?.trim(),\n  interest: formData.interest?.trim() || 'General Inquiry',\n  preferredDate: formData.preferredDate?.trim(),\n  source: formData.source?.trim() || 'Website Form',\n  timestamp: formData.timestamp || new Date().toISOString()\n};\n\n// Create HubSpot contact properties\nconst contactProperties = {\n  email: cleanData.email,\n  firstname: cleanData.firstName,\n  lastname: cleanData.lastName,\n  phone: cleanData.phone,\n  company: cleanData.company,\n  hs_lead_status: 'NEW',\n  lifecyclestage: 'lead',\n  lead_source: cleanData.source,\n  course_interest: cleanData.interest,\n  preferred_start_date: cleanData.preferredDate,\n  initial_message: cleanData.message\n};\n\n// Remove empty values\nObject.keys(contactProperties).forEach(key => {\n  if (!contactProperties[key] || contactProperties[key] === 'Not Provided') {\n    delete contactProperties[key];\n  }\n});\n\nreturn {\n  originalData: formData,\n  cleanData: cleanData,\n  hubspotContact: contactProperties\n};"
      },
      "id": "data-processing",
      "name": "Data Processing",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 200]
    },
    {
      "parameters": {
        "resource": "contact",
        "operation": "upsert",
        "email": "={{ $json.hubspotContact.email }}",
        "additionalFields": {
          "properties": "={{ $json.hubspotContact }}"
        }
      },
      "id": "hubspot-contact",
      "name": "Create/Update HubSpot Contact",
      "type": "n8n-nodes-base.hubspot",
      "typeVersion": 2,
      "position": [900, 200],
      "credentials": {
        "hubspotApi": {
          "id": "hubspot-credentials",
          "name": "HubSpot API Credentials"
        }
      }
    },
    {
      "parameters": {
        "resource": "deal",
        "operation": "create",
        "dealName": "={{ $('Data Processing').item.json.cleanData.interest }} - {{ $('Data Processing').item.json.cleanData.firstName }} {{ $('Data Processing').item.json.cleanData.lastName }}",
        "stage": "appointmentscheduled",
        "additionalFields": {
          "associatedCompanyIds": [],
          "associatedContactIds": [
            "={{ $json.id }}"
          ],
          "properties": {
            "dealtype": "newbusiness",
            "pipeline": "default",
            "amount": "5000",
            "closedate": "={{ DateTime.now().plus({days: 30}).toISO() }}",
            "course_type": "={{ $('Data Processing').item.json.cleanData.interest }}",
            "lead_source": "={{ $('Data Processing').item.json.cleanData.source }}",
            "deal_description": "={{ $('Data Processing').item.json.cleanData.message }}"
          }
        }
      },
      "id": "hubspot-deal",
      "name": "Create HubSpot Deal",
      "type": "n8n-nodes-base.hubspot",
      "typeVersion": 2,
      "position": [1120, 200],
      "credentials": {
        "hubspotApi": {
          "id": "hubspot-credentials",
          "name": "HubSpot API Credentials"
        }
      }
    },
    {
      "parameters": {
        "resource": "task",
        "operation": "create",
        "type": "CALL",
        "subject": "Follow up with {{ $('Data Processing').item.json.cleanData.firstName }} {{ $('Data Processing').item.json.cleanData.lastName }}",
        "additionalFields": {
          "body": "Contact interested in: {{ $('Data Processing').item.json.cleanData.interest }}\\n\\nMessage: {{ $('Data Processing').item.json.cleanData.message }}\\n\\nPreferred Start Date: {{ $('Data Processing').item.json.cleanData.preferredDate }}\\n\\nSource: {{ $('Data Processing').item.json.cleanData.source }}",
          "forObjectType": "CONTACT",
          "forObjectId": "={{ $('Create/Update HubSpot Contact').item.json.id }}",
          "timestamp": "={{ DateTime.now().plus({hours: 2}).toMillis() }}"
        }
      },
      "id": "hubspot-task",
      "name": "Create Follow-up Task",
      "type": "n8n-nodes-base.hubspot",
      "typeVersion": 2,
      "position": [1340, 200],
      "credentials": {
        "hubspotApi": {
          "id": "hubspot-credentials",
          "name": "HubSpot API Credentials"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ {\n  \"success\": true,\n  \"message\": \"Form submitted successfully\",\n  \"contactId\": $('Create/Update HubSpot Contact').item.json.id,\n  \"dealId\": $('Create HubSpot Deal').item.json.id,\n  \"timestamp\": new Date().toISOString()\n} }}"
      },
      "id": "success-response",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1560, 200]
    },
    {
      "parameters": {
        "jsCode": "// Log the error for debugging\nconsole.error('Workflow Error:', $input.first().json);\n\n// Extract error information\nconst error = $input.first().json;\nconst errorMessage = error.message || error.error || 'Unknown error occurred';\nconst errorCode = error.httpCode || error.code || 500;\n\n// Create error response\nreturn {\n  success: false,\n  error: {\n    message: errorMessage,\n    code: errorCode,\n    timestamp: new Date().toISOString(),\n    originalData: $('Webhook Trigger').item.json\n  }\n};"
      },
      "id": "error-handler",
      "name": "Error Handler",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 400]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "options": {
          "responseCode": "={{ $json.error.code }}"
        }
      },
      "id": "error-response",
      "name": "Error Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1120, 400]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": false,\n  \"error\": {\n    \"message\": \"Invalid form data. Name and email are required.\",\n    \"code\": 400,\n    \"timestamp\": \"{{ new Date().toISOString() }}\"\n  }\n}",
        "options": {
          "responseCode": "400"
        }
      },
      "id": "validation-error-response",
      "name": "Validation Error Response", 
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [680, 400]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Data Validation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data Validation": {
      "main": [
        [
          {
            "node": "Data Processing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Validation Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data Processing": {
      "main": [
        [
          {
            "node": "Create/Update HubSpot Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create/Update HubSpot Contact": {
      "main": [
        [
          {
            "node": "Create HubSpot Deal",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create HubSpot Deal": {
      "main": [
        [
          {
            "node": "Create Follow-up Task",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Follow-up Task": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": {
      "errorWorkflow": "error-handler"
    }
  },
  "staticData": {},
  "tags": [
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "form-integration",
      "name": "Form Integration"
    },
    {
      "createdAt": "2024-01-01T00:00:00.000Z", 
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "hubspot",
      "name": "HubSpot"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-01-01T00:00:00.000Z",
  "versionId": "1"
} 